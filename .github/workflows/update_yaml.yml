name: GH-Actions-Basic

on:
  pull_request:
    types:
      - closed
    branches:
      - 'main'
  push:
    branches:
      - 'release/R*'
  repository_dispatch:
    types:
      - some_event_01
      - some_event_02
  workflow_dispatch:
    inputs:
      env:
        type: choice
        description: Promote release to production env?
        required: true
        default: 'prod'
        options:
          - prod
jobs:
  set-envs:
    outputs:
      deploy-branch: ${{ steps.set-envs.outputs.deploy_branch }}
    runs-on: ubuntu-latest
    # if: ${{ github.event.inputs.env }} == 'test' 
    environment:
      name: env-01
    steps:
      - name: Check branch
        id: set-envs
        run: |
          if ${{ startsWith(github.ref, 'refs/heads/release/R') }}; then
            echo "deploy_branch=release" >> $GITHUB_OUTPUT
            echo "branch is ${{ github.ref }}"
          else
            echo "deploy_branch=main" >> $GITHUB_OUTPUT
            echo "main"
          fi
          echo "branch is ${{ github.ref }}"
          echo "ref_name is ${{ github.ref_name }}"
          echo "is merged? ${{github.event.pull_request.merged}}"
          echo "workflow dispatch name ${{ github.event.inputs.env }} "
          
  read-env-main:
    runs-on: ubuntu-latest
    needs: set-envs
    environment:
      name: env-01
    if: github.ref == 'refs/heads/main'
    steps:
      - name: Read Env vars
        run: |
          echo "env vars: '${{ vars.ENV_ID }}'"
          echo "branch is ${{ needs.set-envs.outputs.deploy-branch }}"
          echo "evt name is ${{ github.event_name }}"
          echo "evt type is ${{ github.event.action }}"
      # - name: Invoke Embedded Actions
      #   uses: ./.github/actions/echo
      #   with:
      #     var_01: "test---01"
      #     var_02: "test---02"
  
  read-env-release:
    runs-on: ubuntu-latest
    needs: set-envs
    environment:
      name: env-01
    if:  startsWith(github.ref, 'refs/heads/release/R')
    steps:
      - name: Read Env vars
        run: |
          echo "job is  read-env-release "
          echo "branch is ${{ needs.set-envs.outputs.deploy-branch }}"
  
  react_dispatch_some_event_01:
    runs-on: ubuntu-latest
    needs: set-envs
    if: github.event.action == 'some_event_01'
    steps:
      - name: Check inputs
        run: |
          echo "got input request some_event_01"

  react_dispatch_some_event_02:
    runs-on: ubuntu-latest
    needs: set-envs
    if: github.event.action == 'some_event_02'
    steps:
      - name: Check inputs
        run: |
          echo "got input request some_event_02"
          
  react_workflow_dispatch:
    runs-on: ubuntu-latest
    needs: set-envs
    if: github.event.inputs.env
    steps:
      - name: Check state
        run: echo "react_workflow_dispatc"