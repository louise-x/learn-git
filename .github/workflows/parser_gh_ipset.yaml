name: Parser_GH_Actions
on:
  # pull_request:
  #   types: ['opened', 'edited', 'reopened', 'synchronize']
  # pull_request:
  #   types:
  #     - closed
  push:
    branches:
      - test-actions-merge
    
jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      - name: checkout repo content
        uses: actions/checkout@v4 # checkout the repository content to github runner.
        with:
          ref: test-actions-merge
          fetch-depth: 0
      - name: configure git
        run: |
          git config user.name github-actions
          git config user.email github-actions@github.com
          git checkout test-actions-merge
          git fetch origin
      - name: setup python
        uses: actions/setup-python@v5
        with:
          python-version: 3.12
      - name: Run script
        run: python3 gh_actions_ip/gh_action_ip_parser.py
      - name: check for changes
        id: git-check
        run: |
          if git diff --quiet; then
            echo "No changes detected, exiting workflow successfully"
            exit 0
          fi
          echo "changes=true" >> $GITHUB_OUTPUT
          git add .
          git commit -m "update from GH actions"
          git push -u origin HEAD --verbose
      # - name: continue workflow
      #   if: steps.git-check.outputs.changes == 'true'
      #   run: echo "Changes detected, continuing workflow"
      # - name: cut a branch
      #   if: steps.git-check.outputs.changes == 'true'
      #   run: |
      #     git checkout -b ${{ env.BRANCH_NAME }}
      #     git push -u origin ${{ env.BRANCH_NAME }}
  # merge-main-back-to-trunk:
  #   if: github.event.pull_request.merged == true
  #   timeout-minutes: 2
  #   runs-on: ubuntu-latest
  #   steps:
  #   - uses: actions/checkout@v2
  #   - name: Set Git config
  #     run: |
  #         git config --local user.email "actions@github.com"
  #         git config --local user.name "Github Actions"
  #   - name: Merge main back to trunk
  #     run: |
  #         git fetch --unshallow
  #         git checkout trunk
  #         git pull origin main
  #         git merge --no-ff main -m "Auto-merge main back to trunk"
  #         git push
