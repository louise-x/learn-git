name: Sync-And-Update-Gitops
on:
  workflow_dispatch: # Putting here is also fine!!
  push:
    branches:
      - main
  # pull_request:
  #   types: ['opened', 'edited', 'reopened', 'synchronize']
  # pull_request:
  #   types:
  #     - closed
    # branches:
    #   - main
env:
  BRANCH:  ${{ github.head_ref || github.ref_name }}
  
jobs:
  merge-main-back-to-gitops:
    # permissions:
    #   contents: read
    #   pull-requests: write
    # if: github.event.pull_request.merged == true
    # timeout-minutes: 2
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
        # with:
        #   ref: gitops
      - name: Reset promotion branch
        run: |
          git fetch origin gitops
          git checkout origin/gitops -- stg-value.yaml
      - name: Create Pull Request
        id: cpr
        uses: peter-evans/create-pull-request@v6
        with:
          branch: test-stg-promotion
      # - name: enable automerge
      #   if: steps.open-pr.outputs.pr_number != ''
      #   uses: peter-evans/enable-pull-request-automerge@v2
      #   with:
      #     token: ${{ secrets.PERSONAL_ACCESS_TOKEN }}
      #     pull-request-number: ${{ steps.open-pr.outputs.pr_number }}
      #     merge-method: merge
      
      # â–¼ it's working!!! !
      # - name: Auto approve
      #   uses: hmarr/auto-approve-action@v3
      #   # if: github.actor == 'ws-internal-tools[bot]'
      #   with:
      #     github-token: "${{ secrets.GITHUB_TOKEN }}"
      #     review-message: "checked by bot"
      #     pull-request-number: ${{ steps.cpr.outputs.pull-request-number }}
      - name: Label the PR
        # if: success() && github.actor == 'ws-internal-tools[bot]'
        uses: actions/labeler@v5
      # Label based on branch name
      - uses: actions-ecosystem/action-add-labels@v1
        with:
          number: ${{ steps.cpr.outputs.pull-request-number }}
          labels: automerge
      - name: Auto merge
        # if: success() && github.actor == 'ws-internal-tools[bot]'
        uses: pascalgn/automerge-action@v0.16.2
        env:
          GITHUB_TOKEN: "${{ secrets.GITHUB_TOKEN }}"
          PULL_REQUEST:  ${{ steps.cpr.outputs.pull-request-number }}
    # - uses: actions/checkout@v2
    #   with:
    #     ref: gitops
    # - name: Set Git config
    #   run: |
    #       git config --local user.email "actions@github.com"
    #       git config --local user.name "Github Actions "
    #       git config --local pull.ff true
    # - name: Sync main to gitops
    #   run: |
    #       git fetch origin main
    #       git reset --hard origin/main
    #       git checkout origin/gitops -- stg-value.yaml
    #       git add stg-value.yaml
    #       git status
    #       git diff-index --quiet HEAD || git commit -m "`git log -1 --pretty=format:'%s' origin/gitops -- stg-value.yaml`"
    # - name: Debugging
    #   run: |
    #       git push -u origin gitops -f
    #       echo "branch name tranfer to: ${BRANCH//\//-}"
    #       BRANCH_NAME=${BRANCH//\//-}
    #       echo "BRANCH_NAME=${BRANCH_NAME}" >> $GITHUB_ENV
    #       # : echo "BRANCH_NAME=${BRANCH_NAME}" >> "$GITHUB_OUTPUT"
    #       # : echo "::set-output BRANCH_NAME=${BRANCH_NAME}"
    #       echo "actor is" ${{ github.actor }}
    # - name: print env
    #   run: echo "branch name" ${{ env }}
    # - name: Merge main -> gitops
    #   uses: devmasx/merge-branch@master
    #   with:
    #     type: now
    #     from_branch: main
    #     target_branch: gitops
    #     message: Merge main into gitops
    #     github_token: ${{ secrets.GITHUB_TOKEN }}

  # update-values:
  #   # if: github.event.pull_request.merged == true
  #   needs: merge-main-back-to-gitops
  #   runs-on: ubuntu-latest
  #   steps:
  #     - name: Checkout
  #       uses: actions/checkout@v2
  #       with:
  #         ref: gitops
  #     - name: setupENV
  #       run: |
  #           echo "branch name tranfer to: ${BRANCH//\//-}"
  #           BRANCH_NAME=${BRANCH//\//-}
  #           echo "BRANCH_NAME=${BRANCH_NAME}" >> $GITHUB_ENV
  #     - name: Update deployment.yaml
  #       uses: fjogeleit/yaml-update-action@main
  #       with:
  #         valueFile: "version.yml"
  #         propertyPath: "images[0].newTag"
  #         value: "${{ env.BRANCH_NAME }}-${{ github.sha }}"
  #         message: "Update image tag: ${{ github.ref_name }}-${{ github.sha }}"
  #         createPR: false
  #         title: "Update gitops image tag"
  #         # targetBranch: gitops
  #         branch: gitops
  #         masterBranchName: main
  #         commitChange: true
  #         description: |
  #           Update image tag: ${{ github.ref_name }}-${{ github.sha }} Desc ${{ env.BRANCH_NAME }}
  #           echo ${{ env }}
